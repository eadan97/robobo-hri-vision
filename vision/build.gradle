apply plugin: 'com.android.library'

android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 26
        versionCode 42
        versionName "1.1.6"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        pickFirst  'META-INF/maven/org.bytedeco.javacpp-presets/opencv/pom.properties'
        pickFirst  'META-INF/maven/org.bytedeco.javacpp-presets/opencv/pom.xml'
        pickFirst  'META-INF/maven/org.bytedeco.javacpp-presets/ffmpeg/pom.properties'
        pickFirst  'META-INF/maven/org.bytedeco.javacpp-presets/ffmpeg/pom.xml'
    }
    configurations{
        all*.exclude group: 'org.bytedeco', module: 'javacpp-presets'
    }
    lintOptions {
        disable 'InvalidPackage'
    }

    aaptOptions {
        noCompress "tflite"
        noCompress "lite"
    }
    dexOptions {
        incremental true
    }
}

dependencies {
    //implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation 'com.mytechia:robobo-framework:1.3.4'
    implementation 'com.mytechia:robobo-remote-control:1.0.2'
//    implementation 'com.mytechia:robobo-remote-control-ws:1.0.2.1'
//    implementation ('com.mytechia:remote-control-ros:1.2.3-SNAPSHOT'){
//        changing true
//    }
    implementation 'com.google.zxing:core:3.3.3'
    implementation ('com.mytechia:opencv:4.1.0-my'){
        changing true
    }
    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly'

    //implementation files('../libs/opencv4_1_0_contrib-release.aar')


}


//apply from: 'https://raw.github.com/chrisbanes/gradle-mvn-push/master/gradle-mvn-push.gradle'
apply plugin: "com.vanniktech.maven.publish"

//
afterEvaluate { project ->
    android.libraryVariants.all { variant ->
        tasks.androidJavadocs.doFirst {
            classpath += files(variant.javaCompile.classpath.files)
        }
    }
}